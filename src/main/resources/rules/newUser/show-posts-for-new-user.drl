package rules.newUser;

import app.model.Like;
import app.model.User;
import app.model.Post;
import app.dtos.FeedPost;
import app.services.DroolsService;

global app.model.User loggedUser;
global java.util.List allLikes;
global java.util.List allPosts;

rule "Print"
when
	$fp : FeedPost()
then
	System.out.println("Hi");
	//$fp.setVisible(true);
end

rule "Recommend posts from similar users"
no-loop true
when
    $likeOther : Like( $post : post, user.getId() != loggedUser.getId() )
    not Like( post.getId() == $post.getId() , user.equals(loggedUser) )
    eval(DroolsService.pearsonSimilarity(loggedUser, $likeOther.getUser(), allLikes) >= 0.5)
    $fp : FeedPost( post.getId() == $post.getId() && post.userId != loggedUser.getId() )
then
    System.out.println("Recommend post " + $post.getId() + " to user " + loggedUser.getId()
        + " because user " + $likeOther.getUser().getId() + " liked it");
	//$fp.setVisible(true);
	$fp.setScore($fp.getScore() + 1);
end

rule "Recommend similar posts by likes overlap"
no-loop true
when
    $postA : Post()
    $postB : Post( this != $postA )

    Like( user.getId() == loggedUser.getId(), post.getId() == $postA.getId() )

    not Like( user.getId() == loggedUser.getId(), post.getId() == $postB.getId() )

    eval( DroolsService.postsAreSimilar($postA, $postB, allLikes, 0.7) )
    
    $fp : FeedPost( post.getId() == $postB.getId() && post.userId != loggedUser.getId() )
then
    System.out.println("Recommend post by likes overlap: " + $postB.getId() 
        + " to user " + loggedUser.getId() 
        + " because it is similar to post " + $postA.getId());
    //$fp.setVisible(true);
    $fp.setScore($fp.getScore() + 1);
end

rule "Recommend post by hashtag likes in last 3 days"
no-loop true
when
    $fp : FeedPost( $post : post, $hashtags : post.hashtags )
    not Like( user.getId() == loggedUser.getId(), post.getId() == $post.getId() )
    eval( DroolsService.userLikedHashtagRecently(loggedUser, $hashtags, allLikes, 3, 3) )
then
    System.out.println("Recommend post " + $post.getId() + " to user " + loggedUser.getId()
        + " because they liked >= 3 posts with same hashtag in last 3 days");
    //$fp.setVisible(true);
    $fp.setScore($fp.getScore() + 1);
end

//rule "Recommend post by hashtag posting preference"
//when
//    $fp : FeedPost( $post : post, $hashtags : post.hashtags )
//    eval( $fp.getPost().userId != loggedUser.getId() ) 
//    eval( DroolsService.userPostsContainHashtag(loggedUser, $hashtags, allPosts, 0.3, 365) )
//then
//    System.out.println("Recommend post " + $post.getId() + " to user " + loggedUser.getId()
//        + " because >= 30% of their posts in last year used same hashtag");
//    //$fp.setVisible(true);
//    $fp.setScore($fp.getScore() + 1);
//end
