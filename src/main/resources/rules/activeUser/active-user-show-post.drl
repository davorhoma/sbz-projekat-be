package rules.userWithFriends;

import app.dtos.FeedPost;
import java.time.LocalDateTime;
import java.time.Duration;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import app.dtos.PostDTO;
import app.model.Like;
import app.model.Post;

// Objave prijatelja, ne starije od jedan dan
rule "Show friend's post from last 24h"
when
    $fp : FeedPost(friend == true, 
                   eval($fp.getPost().getCreatedAt().isAfter($fp.getNow().minusHours(24))))
then
    $fp.setVisible(true);
end

// --- Objave korisnika koji nisu prijatelji ---

// Objave sa istim heštegom kao i objave koje je korisnik lajkovao
rule "Show posts with hashtags liked by user"
when
    $fp : FeedPost(
        friend == false,
        $hashtags : post.hashtags,
        $user     : currentUser
    )

    $like : Like(
        user.id == $user.id,
        $likedPost : post
    )

    String( this memberOf $hashtags ) from $likedPost.hashtags
then
    $fp.setVisible(true);
    $fp.setUserLikedSameHashtag(true);
    System.out.println("Visible due to user liked same hashtag: " + $hashtags);
end

// Objave sa istim heštegom kao i korisnikove objave
rule "Show non-friend posts with hashtags created by user"
when
    $fp : FeedPost( 
        $hashtags : post.hashtags, 
        $user : currentUser, 
        friend == false // korisnik NIJE prijatelj sa autorom ovog feed posta
    )
    $own : FeedPost( 
        post.userId == $user.id, 
        $ownTags : post.hashtags 
    )
    String( this memberOf $hashtags ) from $ownTags
then
    $fp.setVisible(true);
    $fp.setUserCreatedHashtag(true);
    System.out.println("Visible due to user created same hashtag (non-friend): " + $hashtags);
end


// Popularne objave na osnovu lajkova (više od 10 lajkova i kreirana u poslednjih 24h)
rule "Show popular post by likes"
when
    $fp : FeedPost(
    	friend == false,
        post.numberOfLikes > 10,
        post.createdAt > LocalDateTime.now().minusHours(24)
    )
then
    $fp.setVisible(true);
end

// Popularne objave na osnovu heštegova
declare Hashtag
    name : String
end

rule "Insert unique hashtags"
when
	FeedPost($hashtags : post.hashtags)
	$h : String() from $hashtags
	not Hashtag ( name == $h )
then
	System.out.println($h);
	insert ( new Hashtag($h) );
end

declare PopularHashtag
    name : String
end

rule "Detect popular hashtags"
when
    $h : Hashtag( $name : name )
    $count : Number( intValue > 5 ) from accumulate(
        FeedPost( $p : post, $created : post.createdAt, $hashtags : post.hashtags )
        and String( this == $name ) from $hashtags
        and eval( $created.isAfter(LocalDateTime.now().minusHours(24)) ),
        count($p)
    )
then
    insert( new PopularHashtag($name) );
    System.out.println("Popular hashtag: " + $name + " (" + $count + ")");
end

rule "Show popular posts with popular hashtags"
when
    $ph : PopularHashtag( $name : name )
    $fp : FeedPost( $hashtags : post.hashtags )
    String( this == $name ) from $hashtags
then
    $fp.setVisible(true);
    System.out.println("Post marked visible due to popular hashtag: " + $name);
end
// -- Popularne objave na osnovu heštegova

